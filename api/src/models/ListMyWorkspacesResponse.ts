/* tslint:disable */
/* eslint-disable */
/**
 * Ory APIs
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * The version of the OpenAPI document: latest
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Workspace } from './Workspace';
import {
    WorkspaceFromJSON,
    WorkspaceFromJSONTyped,
    WorkspaceToJSON,
} from './Workspace';

/**
 * 
 * @export
 * @interface ListMyWorkspacesResponse
 */
export interface ListMyWorkspacesResponse {
    /**
     * 
     * @type {boolean}
     * @memberof ListMyWorkspacesResponse
     */
    has_next_page: boolean;
    /**
     * 
     * @type {string}
     * @memberof ListMyWorkspacesResponse
     */
    next_page_token: string;
    /**
     * 
     * @type {Array<Workspace>}
     * @memberof ListMyWorkspacesResponse
     */
    workspaces: Array<Workspace>;
}

/**
 * Check if a given object implements the ListMyWorkspacesResponse interface.
 */
export function instanceOfListMyWorkspacesResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "has_next_page" in value;
    isInstance = isInstance && "next_page_token" in value;
    isInstance = isInstance && "workspaces" in value;

    return isInstance;
}

export function ListMyWorkspacesResponseFromJSON(json: any): ListMyWorkspacesResponse {
    return ListMyWorkspacesResponseFromJSONTyped(json, false);
}

export function ListMyWorkspacesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListMyWorkspacesResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'has_next_page': json['has_next_page'],
        'next_page_token': json['next_page_token'],
        'workspaces': ((json['workspaces'] as Array<any>).map(WorkspaceFromJSON)),
    };
}

export function ListMyWorkspacesResponseToJSON(value?: ListMyWorkspacesResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'has_next_page': value.has_next_page,
        'next_page_token': value.next_page_token,
        'workspaces': ((value.workspaces as Array<any>).map(WorkspaceToJSON)),
    };
}

