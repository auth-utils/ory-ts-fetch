/* tslint:disable */
/* eslint-disable */
/**
 * Ory APIs
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * The version of the OpenAPI document: latest
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EmailTemplateDataBody } from './EmailTemplateDataBody';
import {
    EmailTemplateDataBodyFromJSON,
    EmailTemplateDataBodyFromJSONTyped,
    EmailTemplateDataBodyToJSON,
} from './EmailTemplateDataBody';

/**
 * Contains the data of the email template, including the subject and body in HTML and plaintext variants
 * @export
 * @interface EmailTemplateData
 */
export interface EmailTemplateData {
    /**
     * 
     * @type {EmailTemplateDataBody}
     * @memberof EmailTemplateData
     */
    body: EmailTemplateDataBody;
    /**
     * 
     * @type {string}
     * @memberof EmailTemplateData
     */
    subject: string;
}

/**
 * Check if a given object implements the EmailTemplateData interface.
 */
export function instanceOfEmailTemplateData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "body" in value;
    isInstance = isInstance && "subject" in value;

    return isInstance;
}

export function EmailTemplateDataFromJSON(json: any): EmailTemplateData {
    return EmailTemplateDataFromJSONTyped(json, false);
}

export function EmailTemplateDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailTemplateData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'body': EmailTemplateDataBodyFromJSON(json['body']),
        'subject': json['subject'],
    };
}

export function EmailTemplateDataToJSON(value?: EmailTemplateData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'body': EmailTemplateDataBodyToJSON(value.body),
        'subject': value.subject,
    };
}

