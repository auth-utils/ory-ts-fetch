/* tslint:disable */
/* eslint-disable */
/**
 * Ory APIs
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * The version of the OpenAPI document: latest
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GenericErrorContent } from './GenericErrorContent';
import {
    GenericErrorContentFromJSON,
    GenericErrorContentFromJSONTyped,
    GenericErrorContentToJSON,
} from './GenericErrorContent';

/**
 * The standard Ory JSON API error format.
 * @export
 * @interface ErrorGeneric
 */
export interface ErrorGeneric {
    /**
     * 
     * @type {GenericErrorContent}
     * @memberof ErrorGeneric
     */
    error: GenericErrorContent;
}

/**
 * Check if a given object implements the ErrorGeneric interface.
 */
export function instanceOfErrorGeneric(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "error" in value;

    return isInstance;
}

export function ErrorGenericFromJSON(json: any): ErrorGeneric {
    return ErrorGenericFromJSONTyped(json, false);
}

export function ErrorGenericFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorGeneric {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'error': GenericErrorContentFromJSON(json['error']),
    };
}

export function ErrorGenericToJSON(value?: ErrorGeneric | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'error': GenericErrorContentToJSON(value.error),
    };
}

