/* tslint:disable */
/* eslint-disable */
/**
 * Ory APIs
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * The version of the OpenAPI document: latest
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SessionActivityDatapoint
 */
export interface SessionActivityDatapoint {
    /**
     * Country of the events
     * @type {string}
     * @memberof SessionActivityDatapoint
     */
    country: string;
    /**
     * Number of events that failed in the given timeframe
     * @type {number}
     * @memberof SessionActivityDatapoint
     */
    failed: number;
    /**
     * Number of events that succeeded in the given timeframe
     * @type {number}
     * @memberof SessionActivityDatapoint
     */
    succeeded: number;
}

/**
 * Check if a given object implements the SessionActivityDatapoint interface.
 */
export function instanceOfSessionActivityDatapoint(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "country" in value;
    isInstance = isInstance && "failed" in value;
    isInstance = isInstance && "succeeded" in value;

    return isInstance;
}

export function SessionActivityDatapointFromJSON(json: any): SessionActivityDatapoint {
    return SessionActivityDatapointFromJSONTyped(json, false);
}

export function SessionActivityDatapointFromJSONTyped(json: any, ignoreDiscriminator: boolean): SessionActivityDatapoint {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'country': json['country'],
        'failed': json['failed'],
        'succeeded': json['succeeded'],
    };
}

export function SessionActivityDatapointToJSON(value?: SessionActivityDatapoint | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'country': value.country,
        'failed': value.failed,
        'succeeded': value.succeeded,
    };
}

