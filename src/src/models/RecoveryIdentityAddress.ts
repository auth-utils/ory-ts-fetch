/* tslint:disable */
/* eslint-disable */
/**
 * Ory APIs
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * The version of the OpenAPI document: latest
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RecoveryIdentityAddress
 */
export interface RecoveryIdentityAddress {
    /**
     * CreatedAt is a helper struct field for gobuffalo.pop.
     * @type {Date}
     * @memberof RecoveryIdentityAddress
     */
    created_at?: Date;
    /**
     * 
     * @type {string}
     * @memberof RecoveryIdentityAddress
     */
    id: string;
    /**
     * UpdatedAt is a helper struct field for gobuffalo.pop.
     * @type {Date}
     * @memberof RecoveryIdentityAddress
     */
    updated_at?: Date;
    /**
     * 
     * @type {string}
     * @memberof RecoveryIdentityAddress
     */
    value: string;
    /**
     * 
     * @type {string}
     * @memberof RecoveryIdentityAddress
     */
    via: string;
}

/**
 * Check if a given object implements the RecoveryIdentityAddress interface.
 */
export function instanceOfRecoveryIdentityAddress(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "value" in value;
    isInstance = isInstance && "via" in value;

    return isInstance;
}

export function RecoveryIdentityAddressFromJSON(json: any): RecoveryIdentityAddress {
    return RecoveryIdentityAddressFromJSONTyped(json, false);
}

export function RecoveryIdentityAddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecoveryIdentityAddress {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'created_at': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'id': json['id'],
        'updated_at': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
        'value': json['value'],
        'via': json['via'],
    };
}

export function RecoveryIdentityAddressToJSON(value?: RecoveryIdentityAddress | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'created_at': value.created_at === undefined ? undefined : (value.created_at.toISOString()),
        'id': value.id,
        'updated_at': value.updated_at === undefined ? undefined : (value.updated_at.toISOString()),
        'value': value.value,
        'via': value.via,
    };
}

