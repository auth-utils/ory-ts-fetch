/* tslint:disable */
/* eslint-disable */
/**
 * Ory APIs
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * The version of the OpenAPI document: latest
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SchemaPatch
 */
export interface SchemaPatch {
    /**
     * The json schema
     * @type {object}
     * @memberof SchemaPatch
     */
    data: object;
    /**
     * The user defined schema name
     * @type {string}
     * @memberof SchemaPatch
     */
    name: string;
}

/**
 * Check if a given object implements the SchemaPatch interface.
 */
export function instanceOfSchemaPatch(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function SchemaPatchFromJSON(json: any): SchemaPatch {
    return SchemaPatchFromJSONTyped(json, false);
}

export function SchemaPatchFromJSONTyped(json: any, ignoreDiscriminator: boolean): SchemaPatch {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': json['data'],
        'name': json['name'],
    };
}

export function SchemaPatchToJSON(value?: SchemaPatch | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': value.data,
        'name': value.name,
    };
}

