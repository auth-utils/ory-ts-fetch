/* tslint:disable */
/* eslint-disable */
/**
 * Ory APIs
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * The version of the OpenAPI document: latest
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Create Subscription Request Body
 * @export
 * @interface CreateSubscriptionBody
 */
export interface CreateSubscriptionBody {
    /**
     * 
     * usd USD
     * eur Euro
     * @type {string}
     * @memberof CreateSubscriptionBody
     */
    currency?: CreateSubscriptionBodyCurrencyEnum;
    /**
     * 
     * monthly Monthly
     * yearly Yearly
     * @type {string}
     * @memberof CreateSubscriptionBody
     */
    interval: CreateSubscriptionBodyIntervalEnum;
    /**
     * 
     * @type {string}
     * @memberof CreateSubscriptionBody
     */
    plan: string;
    /**
     * 
     * @type {string}
     * @memberof CreateSubscriptionBody
     */
    provision_first_project?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CreateSubscriptionBody
     */
    return_to?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateSubscriptionBody
     */
    workspace?: string | null;
}


/**
 * @export
 */
export const CreateSubscriptionBodyCurrencyEnum = {
    Usd: 'usd',
    Eur: 'eur'
} as const;
export type CreateSubscriptionBodyCurrencyEnum = typeof CreateSubscriptionBodyCurrencyEnum[keyof typeof CreateSubscriptionBodyCurrencyEnum];

/**
 * @export
 */
export const CreateSubscriptionBodyIntervalEnum = {
    Monthly: 'monthly',
    Yearly: 'yearly'
} as const;
export type CreateSubscriptionBodyIntervalEnum = typeof CreateSubscriptionBodyIntervalEnum[keyof typeof CreateSubscriptionBodyIntervalEnum];


/**
 * Check if a given object implements the CreateSubscriptionBody interface.
 */
export function instanceOfCreateSubscriptionBody(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "interval" in value;
    isInstance = isInstance && "plan" in value;

    return isInstance;
}

export function CreateSubscriptionBodyFromJSON(json: any): CreateSubscriptionBody {
    return CreateSubscriptionBodyFromJSONTyped(json, false);
}

export function CreateSubscriptionBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateSubscriptionBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'interval': json['interval'],
        'plan': json['plan'],
        'provision_first_project': !exists(json, 'provision_first_project') ? undefined : json['provision_first_project'],
        'return_to': !exists(json, 'return_to') ? undefined : json['return_to'],
        'workspace': !exists(json, 'workspace') ? undefined : json['workspace'],
    };
}

export function CreateSubscriptionBodyToJSON(value?: CreateSubscriptionBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'currency': value.currency,
        'interval': value.interval,
        'plan': value.plan,
        'provision_first_project': value.provision_first_project,
        'return_to': value.return_to,
        'workspace': value.workspace,
    };
}

